<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Cara Share Location dengan Data Latitude Longitude</title>
    <link href="/2023/05/10/Cara-Share-Location-dengan-Data-Latitude-Longitude/"/>
    <url>/2023/05/10/Cara-Share-Location-dengan-Data-Latitude-Longitude/</url>
    
    <content type="html"><![CDATA[<p>Sebenarnya di era digital ini, share location sangat mudah untuk dilakukan. Hampir seluruh platform sosial media bisa secara langsung share loc. Namun, ada kalanya kita hanya memiliki data latitude dan longitude saja. Lantas bagaimana mengubahnya kedalam google maps?</p><p>Mudah caranya, tapi Anda harus bisa membedakan dulu mana latitude, mana longitude. Latitude itu mewakili posisi sumbu Y dalam peta, sedangkan longitude itu posisi sumbu X. Untuk latitude, nilainya berada diantara 0° sampai 90°, nah untuk membedakan mana Utara mana Selatan biasanya data latitude untuk selatan diubah ke negatif. Untuk longitude, nilainya berada diantara 0° sampai 180° dengan ketentuan jika berada di timur prime meridian berarti positif dan barat prime meridian berarti negatif.</p><p><img src="/images/Cara-Share-Location-dengan-Data-Latitude-Longitude/img.png" alt="Latitude Longitude"></p><p>Contohnya Yogyakarta, contoh titik nilai DMSnya adalah <strong>7° 47’ 49.4448’’ S</strong> &amp; <strong>110° 22’ 13.9044’’ E</strong> atau jika diubah ke latitude longitude desimal adalah <strong>-7.797068</strong> &amp; <strong>110.370529</strong>. Nah apabila kita hanya memiliki latitude longitude saja, untuk share loc bisa menggunakan API query google maps.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>www.google.com<span class="hljs-regexp">/maps/</span>search/?api=<span class="hljs-number">1</span>&amp;query=LATITUDE,LONGITUDE<br><br><span class="hljs-comment"># GPS Yogyakarta</span><br>https:<span class="hljs-regexp">//</span>www.google.com<span class="hljs-regexp">/maps/</span>search/?api=<span class="hljs-number">1</span>&amp;query=-<span class="hljs-number">7.797068</span>,<span class="hljs-number">110.370529</span><br></code></pre></td></tr></table></figure><p>Semoga bermanfaat.</p>]]></content>
    
    
    
    <tags>
      
      <tag>google maps</tag>
      
      <tag>maps</tag>
      
      <tag>latitude</tag>
      
      <tag>longitude</tag>
      
      <tag>latlong</tag>
      
      <tag>share location</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Menilai Keaslian Pengiriman Data Request dengan HMAC</title>
    <link href="/2023/05/09/Menilai-Keaslian-Pengiriman-Data-Request-dengan-HMAC/"/>
    <url>/2023/05/09/Menilai-Keaslian-Pengiriman-Data-Request-dengan-HMAC/</url>
    
    <content type="html"><![CDATA[<p>Siapa yang belum mengenal tentang HMAC? HMAC dikenal dengan kepanjangan <em>hash-based message authentication code</em>, sebuah pesan kunci hash yang dapat digunakan sebagai otentikasi bahkan verifikasi dari data yang dikirimkan. Pesan hash ini dihasilkan dari fungsi hash kriptografis dengan berbekal parameter input data pesannya dan sebuah kunci. Jenisnya ada banyak mengikuti algoritma hash yang digunakan, seperti MD5, SHA1, SHA256, SHA512 dan sebagainya.</p><h2 id="Bagaimana-menilai-keaslian-suatu-data"><a href="#Bagaimana-menilai-keaslian-suatu-data" class="headerlink" title="Bagaimana menilai keaslian suatu data?"></a>Bagaimana menilai keaslian suatu data?</h2><p>Pertukaran data di HTTP pada dasarnya <em>stateless</em> sehingga suatu node tidak akan pernah tahu apakah request data satu dengan data selanjutnya berasal dari node yang sama. Supaya tahu apakah pengirim merupakan user yang dikenal, biasanya suatu request HTTP dilampirkan suatu data otentikasi, entah di header <code>authorization</code>, cookies, url query params dan lain sebagainya. Tapi, apakah data tersebut merupakan data asli atau hanya hasil tempering dari penyusup?</p><p>Makanya, kita bisa melakukan verifikasi data yang dikirimkan dengan HMAC ini. Apabila HMAC yang diberikan tidak cocok dengan HMAC hasil generate dari server, tentu itu menunjukkan bahwa request yang masuk adalah hasil tempering dari intruder.</p><h2 id="Bagaimana-teknis-verifikasi-data"><a href="#Bagaimana-teknis-verifikasi-data" class="headerlink" title="Bagaimana teknis verifikasi data?"></a>Bagaimana teknis verifikasi data?</h2><p>Saya akan memberikan contoh, cara bagaimana menggunakan HMAC ini dalam hal verifikasi data untuk keamanan Server to Server.</p><ol><li>Setiap server dipastikan memiliki kunci yang sama, atau setidaknya saling mengetahui kunci HMAC server yang hendak dihubungi.</li><li>Setiap body request dilakukan generate HMAC, kemudian disematkan dalam header. Misalnya, dalam header <code>authorization</code>, ataupun custom header lain <code>X-AUTH</code>.</li><li>Setiap request yang diterima, harus melalui middleware untuk pencocokan HMAC request dengan HMAC hasil dari generate server penerima.</li><li>Jika HMAC berbeda, maka request terhalang dan pesan error diberikan.</li></ol><p>Semoga bermanfaat</p>]]></content>
    
    
    
    <tags>
      
      <tag>kriptografi</tag>
      
      <tag>hash</tag>
      
      <tag>web</tag>
      
      <tag>keamanan</tag>
      
      <tag>cybersecurity</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kunci Wordle v2</title>
    <link href="/2023/05/08/Kunci-Wordle-v2/"/>
    <url>/2023/05/08/Kunci-Wordle-v2/</url>
    
    <content type="html"><![CDATA[<p>Wordle sebuah permainan teka-teki yang memaksa kita untuk menerka, kira-kira kata apa yang muncul hari ini. Permainan yang sederhana berisi kotak berjejer lima dengan jumlah baris 6 buah, kita dituntut untuk bisa menebak maksimal 6 kali untuk sebuah kata dengan 5 karakter. Tapi, untuk versi kedua ini kuncinya terlalu mudah untuk didapatkan sehingga kita bisa mencontek apa kata yang keluar hari itu.</p><p>Sebenarnya permainan ini mirip dengan <a href="https://reyzeal.com/2023/05/04/Kunci-Katla/">katla</a> yang mana untuk versi saat ini masih bisa ditebak. Hanya saja untuk wordle, kuncinya terlalu mudah untuk didapat. Bila katla harus menggunakan kriptografi dan permainan encoding, wordle justru hanya bermodal endpoint API servicenya saja.</p><p>Berbeda dengan katla, wordle melakukan tracking data user dengan menyimpannya di server. Sedangkan katla hanya dilakukan di local storage saja, sehingga data user bisa seenaknya direset dengan clear local storage.</p><p>Ketika ada trafik API inilah saya menjadi curiga, jangan-jangan kata kuncinya bisa direquest melalui API. Dan ternyata benar, ketika saya mencoba inspect elemen dan memonitoring network, ada endpoint berbentuk seperti ini:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>www.nytimes.com<span class="hljs-regexp">/svc/</span>wordle<span class="hljs-regexp">/v2/</span><span class="hljs-number">2023</span>-<span class="hljs-number">05</span>-<span class="hljs-number">08</span>.json<br></code></pre></td></tr></table></figure><p><img src="/images/wordle1.png" alt="API Wordle v2 untuk tanggal 8 Mei 2023"></p><p><img src="/images/wordle2.png" alt="Hasil tanggal 8 Mei 2023"></p><p>Ternyata solutionnya tidak dilakukan hash&#x2F;encryption sehingga langsung bisa didapatkan. Seharusnya, untuk data semacam <code>solution</code> ini tidak diberikan secara plain text. Bisa dengan hash, encoding atau apapun. Ini menjadi pelajaran kita bahwa keamanan siber itu perlu diupayakan. Memang kunci akan lebih mudah dikonsumsi oleh aplikasi &#x2F; program, namun dari segi keamanan, orang bisa dengan mudah melakukan bypass tanpa ada effort apapun. Memang bener sih, tidak ada yang aman di dunia ini, yang ada adalah kerepotan yang membuat sesuatu itu menjadi aman. Semoga bermanfaat. </p><div style="width: 100%; display: flex; flex-direction: column; text-align: center"><div style="background: white; margin:auto; color: black; width: 100%; height: 2em;" id="iframe"></div><figcaption class="image-caption" style="margin: 0 !important;">Kata kunci wordle untuk hari ini</figcaption></div><script type="application/javascript">    const now = new Date();    const tanggal = `${now.getFullYear()}-${String(now.getMonth()+1).padStart(2,"0")}-${String(now.getDate()).padStart(2,"0")}`;    fetch("https://wordle-today-reyzeal.vercel.app/data?tanggal="+tanggal)        .then(r => r.json())        .then(r => {            document.getElementById("iframe").innerHTML=r.solution.toUpperCase();        });</script>]]></content>
    
    
    
    <tags>
      
      <tag>hack</tag>
      
      <tag>web</tag>
      
      <tag>games</tag>
      
      <tag>security</tag>
      
      <tag>audit</tag>
      
      <tag>api</tag>
      
      <tag>json</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Potensi SaaS dalam Peluang Bisnis</title>
    <link href="/2023/05/07/Potensi-SaaS-dalam-Peluang-Bisnis/"/>
    <url>/2023/05/07/Potensi-SaaS-dalam-Peluang-Bisnis/</url>
    
    <content type="html"><![CDATA[<p>Software as a Service (SaaS) atau perangkat lunak sebagai layanan bisa menjadi peluang bisnis di era digital saat ini. Kita sebagai vendor SaaS tinggal menyiapkan dan memelihara aplikasi secara <em>cloud</em> kemudian pengguna dapat mengaksesnya melalui peramban internet. Dengan begitu, kita tidak perlu memikirkan bagaimana pemeliharaan server dan segala infrastrukturnya sehingga bisa lebih fokus mengembangkan layanan &#x2F; aplikasi.</p><h2 id="Kenapa-SaaS-bisa-menjadi-peluang-bisnis"><a href="#Kenapa-SaaS-bisa-menjadi-peluang-bisnis" class="headerlink" title="Kenapa SaaS bisa menjadi peluang bisnis?"></a>Kenapa SaaS bisa menjadi peluang bisnis?</h2><p>SaaS menjadi solusi yang tepat karena teknologi <em>on-premise</em> dipastikan lebih mahal secara operasional. On-premise adalah jenis server berupa software yang dijalankan secara internal, biasanya perlu tim IT yang mengembangkan dan mengelolanya. Tentu, ini memerlukan banyak biaya seperti biaya operasional server, gaji tim IT dan lain sebagainya. Ketika layanan yang ditawarkan bisa mencakup banyak instansi&#x2F;perusahaan atau bahkan personal user, maka biaya yang end-user harus keluarkan jauh lebih kecil daripada mereka harus menyediakannya sendiri.</p><p>Disisi lain, SaaS yang berjalan di atas pondasi teknologi cloud memungkinkan kita sebagai vendor untuk mengoptimalkan biaya operasional layanan kita. Sebagaimana asas Pay-as-you-go dari cloud yang meringankan beban vendor karena biaya yang ditagihkan sesuai dengan kebutuhan. Jika traffic sedang rendah, biaya operasional pun rendah bahkan bisa tidak perlu membayar apapun. Namun ketika traffic sedang tinggi, beban biayanya juga meningkat. Tinggal bagaimana kalkulasi bisnis kita sebagai vendor untuk meraup untung.</p><p>Ini menjadi peluang yang bisa kita maksimalkan asalkan kita bisa menyediakan layanan yang tepat guna. Pasarnya masih sangat luas dari berbagai bidang usaha, tinggal bagaimana kita melihat kebutuhan mereka dan mau membuatkan solusi untuk mereka.</p><h2 id="Apakah-saya-bisa-berbisnis-dengan-SaaS"><a href="#Apakah-saya-bisa-berbisnis-dengan-SaaS" class="headerlink" title="Apakah saya bisa berbisnis dengan SaaS?"></a>Apakah saya bisa berbisnis dengan SaaS?</h2><p>Jawabannya BISA. Singkatnya, kita hanya perlu membuat suatu layanan&#x2F;aplikasi kemudian dilakukan deployment melalui cloud sehingga client kita bisa mengaksesnya via internet. Makanya sendirian pun saya rasa bisa, yaitu orang yang mampu membuat aplikasi (full-stack) sekaligus bisa menyiapkan cloudnya. Tapi, alangkah baiknya jika kita menyiapkan tim meskipun itu tim yang kecil.</p><p>Dari segi teknis, saya kira untuk tim kecil memerlukan:</p><ol><li>Backend Developer : bertugas menyiapkan engine dari layanan</li><li>Frontend Developer : bertugas menyiapkan UI layanan</li><li>DevOps : bertugas untuk deployment ke cloud, termasuk stagingnya sampe production</li><li>UI&#x2F;UX : bertugas untuk pembuatan desain UI dan segala resource asetnya</li></ol><p>Setelah kita berhasil membuat layanan dengan tim kecil itu, kita perlu melakukan pemasaran. Bilamana kita berhasil mencari user dan income yang dihasilkan juga sehat untuk bisnis SaaS, maka selamat kita berhasil berbisnis dengan SaaS.</p><p>Btw, kalau Anda bisa lakukan sendirian, menjadi avatar dalam bisnis Anda, silahkan lakukan. Tapi ingat, ketika sudah berjalan, apapun yang terjadi, beban itu Anda pikul sendirian lho ya. Untuk awal gapapa, tapi jangan keterusan.</p><h2 id="Peluang-bisnis-dengan-SaaS"><a href="#Peluang-bisnis-dengan-SaaS" class="headerlink" title="Peluang bisnis dengan SaaS?"></a>Peluang bisnis dengan SaaS?</h2><p>Apapun masalahnya dan ketika solusinya bisa diupayakan dalam bentuk layanan aplikasi, saya rasa bisa menjadi peluang bisnis SaaS. Contoh paling gamblangnya untuk saat ini ya undangan online. Itu salah satu contoh kongkrit dari SaaS di kehidupan nyata. Adapun secara literatur, ada beberapa aplikasi SaaS diberbagai bidang berikut:</p><ul><li>Manajemen Hubungan Pelanggan (CRM)</li><li>Perencanaan Sumber Daya Korporasi (ERP)</li><li>Akuntansi</li><li>Sumber Daya Manusia</li><li>Keamanan</li><li>Komunikasi</li><li>Pusat Kontak</li><li>Editor Dokumen</li></ul><p>Tapi tidak menutup kemungkinan bidang-bidang lain seperti kesehatan, hukum, dll bisa lho menjadi peluang bisnis kita.</p><h2 id="Kunci-utama-SaaS"><a href="#Kunci-utama-SaaS" class="headerlink" title="Kunci utama SaaS"></a>Kunci utama SaaS</h2><p>Memaksimalkan teknologi cloud menjadi kunci utama SaaS. Arsitektur dari layanan menjadi hal utama yang harus dipertimbangkan. Bila salah dalam memilih produk cloud, pasti akan berimbas pada kompleksitas layanan dan juga biaya yang dikeluarkan.</p><p>Contoh sederhananya, karena saya berpengalaman di google cloud, biaya layanan SaaS yang menggunakan produk App Engine untuk Backendnya dipastikan lebih mahal daripada cloud functions. Ketika SaaS hanya membutuhkan transaksi data sederhana saja, maka baiknya kita pilih cloud functions yang jauh lebih murah. Tetapi dalam hal responsive, App Engine lebih cocok ketika requirement SaaS perlu standby tanpa putus. Hal-hal seperti inilah yang nantinya perlu diperhatikan supaya biaya operasional SaaS dapat optimal.</p><p>Teknologi cloud juga memudahkan kita dalam deployment. Ketika ada client baru, kita tidak perlu menyiapkan apapun secara manual karena dalam cloud semua bisa dilakukan secara terintegrasi. Tinggal bagaimana kita menyiapkan setiap trigger dari event dalam cloud kita.</p><h2 id="Akhir-Kata"><a href="#Akhir-Kata" class="headerlink" title="Akhir Kata"></a>Akhir Kata</h2><p>Bisnis dengan berbasis SaaS memungkinkan sekali dilakukan dengan tim kecil. Hal yang terpenting adalah layanan yang kita tawarkan menjadi solusi bagi masalah orang-orang diluar sana. Kita sukses berbisnis SaaS apabila client merasa terbantu dan kita pun mendapatkan penghasilan, win-win solution untuk semua.</p>]]></content>
    
    
    
    <tags>
      
      <tag>SaaS</tag>
      
      <tag>Cloud</tag>
      
      <tag>Technologi</tag>
      
      <tag>Bisnis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Membuat Link Chat ke Whatsapp</title>
    <link href="/2023/05/06/Membuat-Link-Chat-ke-Whatsapp/"/>
    <url>/2023/05/06/Membuat-Link-Chat-ke-Whatsapp/</url>
    
    <content type="html"><![CDATA[<p>Kita bisa lho membuat suatu link yang mengarahkan langsung untuk chat whatsapp. Tidak hanya mengarahkan, tapi juga bisa menyiapkan format teks yang akan di tulis oleh orangnya. Caranya mudah, tinggal menyiapkan nomor whatsapp tujuan dan teks yang menjadi template chatnya (opsional sih).</p><p>Format Linknya sebagai berikut, ada dua yang perlu diganti yaitu <code>&lt;NOMOR HP&gt;</code> dan bagian <code>&lt;TEKS&gt;</code>.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>api.whatsapp.com<span class="hljs-regexp">/send/</span>?phone=&lt;NOMOR HP&gt;&amp;text=&lt;TEKS&gt;<br><br>atau<br><br>https:<span class="hljs-regexp">//</span>wa.me/&lt;NOMOR HP&gt;?text=&lt;TEKS&gt;<br></code></pre></td></tr></table></figure><p><em>Ketentuan nomor hp harus diawali dengan kode negara seperti ini 628XXXXX</em></p><p>Jika tidak memerlukan teks template, cukup tulis sampai nomor hpnya saja seperti ini:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>api.whatsapp.com<span class="hljs-regexp">/send/</span>?phone=&lt;NOMOR HP&gt;<br><br>atau<br><br>https:<span class="hljs-regexp">//</span>wa.me/&lt;NOMOR HP&gt;<br></code></pre></td></tr></table></figure><p>Perlu diperhatikan untuk penulisan teks sebaiknya dilakukan <a href="/2023/05/06/Percent-Encoding/">percent encoding</a>. Tapi, mending menggunakan tool yang sudah saya sediakan dibawah ini.</p><h3 id="Buat-Link-Chat-Whatsapp"><a href="#Buat-Link-Chat-Whatsapp" class="headerlink" title="Buat Link Chat Whatsapp"></a>Buat Link Chat Whatsapp</h3><p>Cobain dah pake form dibawah ini, biar dibuatin linknya.</p><div id="link-chat-wa">    <div>        <input type="number" onkeyup="linkChatWA()" style="width: 100%" placeholder="Isi nomor hp" name="nomor"/>    </div>    <div>        <textarea onkeyup="linkChatWA()" style="width: 100%" placeholder="tulis teksnya disini" name="teks"></textarea>    </div>    <a href="" target="_blank">        <code id="hasil"></code>    </a></div><script type="application/javascript">    function linkChatWA() {        var nomor = document.querySelector("[name=nomor]");        var teks = document.querySelector("[name=teks]");        var temp = "phone="+nomor.value;        if(teks.value){            temp += "&text="+encodeURIComponent(teks.value)        }        document.getElementById("hasil").innerHTML = "https://api.whatsapp.com/send/?"+temp;        document.getElementById("hasil").parentElement.setAttribute("href", "https://api.whatsapp.com/send/?"+temp);    }    linkChatWA()</script><p>Link seperti ini bisa digunakan untuk call to action di website, bio sosial media, ataupun linktree. Semoga bermanfaat.</p><h2 id="Daftar-Pustaka"><a href="#Daftar-Pustaka" class="headerlink" title="Daftar Pustaka"></a>Daftar Pustaka</h2><p>“How to use click to chat” by <strong>Whatsapp</strong> <a href="https://faq.whatsapp.com/5913398998672934">https://faq.whatsapp.com/5913398998672934</a><br>“Percent Encoding” by <strong>Reyzeal</strong> <a href="https://reyzeal.com/2023/05/05/Percent-Encoding/">https://reyzeal.com/2023/05/05/Percent-Encoding/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>whatsapp</tag>
      
      <tag>chat</tag>
      
      <tag>sosial media</tag>
      
      <tag>tutorial</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Percent Encoding</title>
    <link href="/2023/05/05/Percent-Encoding/"/>
    <url>/2023/05/05/Percent-Encoding/</url>
    
    <content type="html"><![CDATA[<p>Percent-encoding adalah mekanisme penulisan beberapa karakter sehingga tidak merusak konteks URL. Karena ada beberapa karakter yang apabila ditulis secara eksplisit maka akan membuat ambigu struktur URLnya. Percent-encoding ditandai dengan penulisan yang diawali dengan karakter <code>%</code> kemudian dilanjutkan dengan bilangan heksadesimal dari nilai ASCII karakter tsb.</p><p>Beberapa karakter yang dimaksud adalah <code>:</code>, <code>/</code>, <code>?</code>, <code>#</code>, <code>[</code>, <code>]</code>, <code>@</code>, <code>!</code>, <code>$</code>, <code>&amp;</code>, <code>&#39;</code>, <code>(</code>, <code>)</code>, <code>*</code>, <code>+</code>, <code>,</code>, <code>;</code>, <code>=</code>, dan karakter <code>%</code> itu sendiri.</p><table>  <thead>    <tr>      <th>Character</th>      <th>Encoding</th>    </tr>  </thead>  <tbody>    <tr>      <td><code>':'</code></td>      <td><code>%3A</code></td>    </tr>    <tr>      <td><code>'/'</code></td>      <td><code>%2F</code></td>    </tr>    <tr>      <td><code>'?'</code></td>      <td><code>%3F</code></td>    </tr>    <tr>      <td><code>'#'</code></td>      <td><code>%23</code></td>    </tr>    <tr>      <td><code>'['</code></td>      <td><code>%5B</code></td>    </tr>    <tr>      <td><code>']'</code></td>      <td><code>%5D</code></td>    </tr>    <tr>      <td><code>'@'</code></td>      <td><code>%40</code></td>    </tr>    <tr>      <td><code>'!'</code></td>      <td><code>%21</code></td>    </tr>    <tr>      <td><code>'$'</code></td>      <td><code>%24</code></td>    </tr>    <tr>      <td><code>'&amp;'</code></td>      <td><code>%26</code></td>    </tr>    <tr>      <td><code>"'"</code></td>      <td><code>%27</code></td>    </tr>    <tr>      <td><code>'('</code></td>      <td><code>%28</code></td>    </tr>    <tr>      <td><code>')'</code></td>      <td><code>%29</code></td>    </tr>    <tr>      <td><code>'*'</code></td>      <td><code>%2A</code></td>    </tr>    <tr>      <td><code>'+'</code></td>      <td><code>%2B</code></td>    </tr>    <tr>      <td><code>','</code></td>      <td><code>%2C</code></td>    </tr>    <tr>      <td><code>';'</code></td>      <td><code>%3B</code></td>    </tr>    <tr>      <td><code>'='</code></td>      <td><code>%3D</code></td>    </tr>    <tr>      <td><code>'%'</code></td>      <td><code>%25</code></td>    </tr>    <tr>      <td><code>' '</code></td>      <td><code>%20</code> atau <code>+</code></td>    </tr>  </tbody></table><p>Mengapa harus dilakukan encoding seperti ini? Paling mencolok adalah karakter <code>/</code> yang mana berarti sub direktori dari suatu URL, apabila suatu path berisi karakter tersebut maka parsing URL mengira pathnya sudah berpindah. Misalnya, kita perlu menulis suatu data url seperti <code>merah/hijau</code> dan dikirim ke path root <code>/</code> dari host. Bila ditulis ke URL <code>http://example.com/merah/hijau</code> maka path routingnya berbeda.</p><h2 id="Percent-Encoding"><a href="#Percent-Encoding" class="headerlink" title="Percent Encoding"></a>Percent Encoding</h2><p>Cobain <code>percent-encoding</code> dah pake ini.</p><div id="link-chat-wa">    <div>        <textarea onkeyup="percentEncoding()" style="width: 100%" placeholder="tulis teksnya disini" name="teks"></textarea>    </div>    <code id="hasil"></code></div><script type="application/javascript">    function percentEncoding() {        var teks = document.querySelector("[name=teks]");        document.getElementById("hasil").innerHTML = encodeURIComponent(teks.value)    }    linkChatWA()</script><h2 id="Daftar-Pustaka"><a href="#Daftar-Pustaka" class="headerlink" title="Daftar Pustaka"></a>Daftar Pustaka</h2><p>“Percent Encoding” by <strong>Developer Mozilla</strong> <a href="https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding">https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding</a></p><p>“URL Encoding” by <strong>Wikipedia</strong> <a href="https://en.wikipedia.org/wiki/URL_encoding">https://en.wikipedia.org/wiki/URL_encoding</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>encoding</tag>
      
      <tag>url</tag>
      
      <tag>website</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kunci Katla</title>
    <link href="/2023/05/04/Kunci-Katla/"/>
    <url>/2023/05/04/Kunci-Katla/</url>
    
    <content type="html"><![CDATA[<p>Pernah main katla? Sebuah game tebak kata yang terdiri dari 5 huruf. Cobain deh, link gamenya ada di <a href="https://katla.vercel.app/">https://katla.vercel.app/</a>. Kalau Anda frustasi, silahkan gunakan fungsi berikut ini untuk mendapatkan kata kuncinya.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">translate</span>(<span class="hljs-params">text</span>)&#123;<br>  <span class="hljs-keyword">let</span> data = text.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&quot;</span>)<br>  <span class="hljs-keyword">let</span> r = data.<span class="hljs-title function_">pop</span>()<br>  data = data.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">v,i</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(v.<span class="hljs-title function_">charCodeAt</span>()+(i%<span class="hljs-number">2</span> === <span class="hljs-number">0</span>?-<span class="hljs-number">1</span>:<span class="hljs-number">1</span>))<br>  &#125;)<br>  data = data.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>  data += <span class="hljs-string">&quot;=&quot;</span>.<span class="hljs-title function_">repeat</span>(<span class="hljs-built_in">parseInt</span>(r))<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">atob</span>(data)<br>&#125;<br></code></pre></td></tr></table></figure><p>Hal yang perlu disiapkan adalah membuka inspect elemen di web katla, masuk ke tab console. Kemudian ketik <code>__NEXT_DATA__</code> apabila muncul objectnya, berarti kita tinggal mengakses property object tersebut untuk mendapatkan data <code>hashed</code>, lengkapnya di <code>__NEXT_DATA__.props.pageProps.hashed </code>. Terima kasih untuk framework nextjs sehingga props datanya bisa diakses dengan mudah.</p><p><img src="/../images/katla_01.png" alt="Mendapatkan hash dari data props Nextjs"></p><p>Hash yang muncul kemudian digunakan untuk parameter fungsi translate yang sudah dilampirkan diatas. Paste di console sehingga bisa digunakan. Perlu diperhatikan bahwa hash yang berhasil di translate memiliki 3 bagian, yaitu nomor katlanya, clue hari ini dan clue kemarin. Ketiga bagian dipisahkan dengan string <code>::</code>, makanya tinggal kita split saja.</p><p><img src="/../images/katla_02.png" alt="Hashed Katla memiliki 3 bagian"></p><video width='100%' height='250px' controls><source src='/videos/2023-05-04%2009-03-36.mp4 ' type=video/webm> Your browser does not support the webm tag.</video><div style="text-align: center; padding: 1em;">Coba paste hashnya disini : <br/><input id="katla" onkeyup="callback(event)"><div id="result"></div></div><script type="application/javascript">    const inputan = document.getElementById("katla");    const hasil = document.getElementById("result");    function callback(e) {        try {            let first = translate(e.target.value);            let second = first.split("::").map((v,i) => i===0?v:translate(v));            hasil.innerHTML="Hasil : "+`<span style="font-weight:bold;">${second[1]}</span>`;        }catch(e){            hasil.innerHTML=`<span style="color:#F96;font-weight:bold;">Hash katla tidak sesuai</span>`        }    }    function translate(text){      let data = text.split("");      let r = data.pop();      data = data.map((v,i) => {        return String.fromCharCode(v.charCodeAt()+(i%2 === 0?-1:1))      });      data = data.join("");      data += "=".repeat(parseInt(r));      return atob(data)    }</script><p>Semoga bermanfaat.</p>]]></content>
    
    
    
    <tags>
      
      <tag>katla</tag>
      
      <tag>kriptografi</tag>
      
      <tag>hack</tag>
      
      <tag>hash</tag>
      
      <tag>encryption</tag>
      
      <tag>base64</tag>
      
      <tag>games</tag>
      
      <tag>security</tag>
      
      <tag>audit</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pengaturan Puppeteer di VM GCP</title>
    <link href="/2023/05/03/Pengaturan-Puppeteer-di-VM-Compute-Engine-GCP/"/>
    <url>/2023/05/03/Pengaturan-Puppeteer-di-VM-Compute-Engine-GCP/</url>
    
    <content type="html"><![CDATA[<p>Ada banyak hal yang bisa dilakukan dengan menjalankan puppeteer, selenium atau browser automation. Testing bisa, scraping bisa, task automation, dan lain sebagainya. Skrip yang sudah dibuat pastinya berjalan normal dilokal PC. Masalah justru muncul ketika implementasi ke server yang mana masalah utamanya adalah beda environment.</p><p>Beberapa faktor saat implementasi di server:</p><ol><li>Server tidak memiliki display monitor, sehingga perlu membuat virtual display</li><li>Driver&#x2F;Library yang dibutuhkan untuk keperluan display sistem</li><li>Spesifikasi server yang kurang mumpuni, biasanya sih RAMnya</li></ol><h2 id="Konfigurasi-Display-di-Compute-Engine-GCP"><a href="#Konfigurasi-Display-di-Compute-Engine-GCP" class="headerlink" title="Konfigurasi Display di Compute Engine GCP"></a>Konfigurasi Display di Compute Engine GCP</h2><p><img src="/images/pengaturan_gcp_1.png" alt="Display Device harus dicentang"><br>Pastikan Display Device sudah tercentang. Apabila belum, perlu menghentikan VM kemudian edit dan nyalakan ulang.</p><h2 id="Ubuntu-Server-Driver-yang-dibutuhkan"><a href="#Ubuntu-Server-Driver-yang-dibutuhkan" class="headerlink" title="(Ubuntu Server) Driver yang dibutuhkan"></a>(Ubuntu Server) Driver yang dibutuhkan</h2><p>Ada beberapa library yang perlu diinstal untuk ubuntu server.</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> apt-get install -y gconf-service libasound2 libatk1.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libc6 libcairo2 libcups2 libdbus-<span class="hljs-number">1</span>-<span class="hljs-number">3</span> libexpat1 libfontconfig1 libgcc1 libgconf-<span class="hljs-number">2</span>-<span class="hljs-number">4</span> libgdk-pixbuf2.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libglib2.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libgtk-<span class="hljs-number">3</span>-<span class="hljs-number">0</span> libnspr4 libpango-<span class="hljs-number">1</span>.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libpangocairo-<span class="hljs-number">1</span>.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libstdc++<span class="hljs-number">6</span> libx11-<span class="hljs-number">6</span> libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget libgbm-dev<br></code></pre></td></tr></table></figure><h2 id="Spesifikasi-Server"><a href="#Spesifikasi-Server" class="headerlink" title="Spesifikasi Server"></a>Spesifikasi Server</h2><p>Biasanya untuk running 1 skrip membutuhkan minimal 300 MB, hal ini dikarenakan puppeteer perlu menjalankan browser meskipun berjalan secara headless. Asalkan 1 VM diperuntukkan khusus untuk 1 skrip automation, jenis machine <code>e2-micro</code> cukup kuat.</p>]]></content>
    
    
    
    <tags>
      
      <tag>puppeteer</tag>
      
      <tag>automation</tag>
      
      <tag>virtual machine</tag>
      
      <tag>cloud</tag>
      
      <tag>google cloud platform</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Konfigurasi Docker Nodejs untuk Google Cloud Run</title>
    <link href="/2023/04/28/Konfigurasi-Docker-Nodejs-untuk-Google-Cloud-Run/"/>
    <url>/2023/04/28/Konfigurasi-Docker-Nodejs-untuk-Google-Cloud-Run/</url>
    
    <content type="html"><![CDATA[<p>Cloud Run merupakan layanan komputasi serverless berbasis container yang disediakan oleh Google. Ada dua kunci utama dari cloud run yaitu serverless dan container. Serverless berarti kita sebagai pengguna tidak perlu melakukan penyediaan, konfigurasi, dan pengelolaan server. Karena berbasis container, maka kita hanya perlu mengatur environment container tersebut dengan dockerfile. Lalu bagaimana kita melakukan konfigurasi dockerfile nodejs?</p><span id="more"></span><p>Oiya, sebenarnya untuk dockerfile ini bisa berlaku universal di platform manapun. Namun dalam kasus ini saya menggunakan studi kasus di Google Cloud Run. Sehingga untuk beberapa teknis saya sesuaikan dengan dokumentasi dan arahan dari Google Cloud Platform.</p><p>Sebelum kita mulai membahas dockerfilenya, kita coba bagi menjadi dua section. Pertama, kita coba gunakan dockerfile yang ada dari dokumentasi original dari Node. Kemudian melakukan adjustment agar sesuai dengan environment GCP.</p><h3>Server.js</h3><p>Dengan asumsi kita memiliki entrypoint di script bernama server.js:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">const express = require(<span class="hljs-string">&#x27;express&#x27;</span>);<br><br>// Konstanta<br>const PORT = <span class="hljs-number">8080</span>;<br>const HOST = <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>;<br><br>// Webservice<br>const app = express();<br>app.get(<span class="hljs-string">&#x27;/&#x27;</span>, (req, res) =&gt; &#123;<br>  res.send(<span class="hljs-string">&#x27;Hello World&#x27;</span>);<br>&#125;);<br><br>app.listen(PORT, HOST);<br>console.log(`Running on http://$&#123;HOST&#125;:$&#123;PORT&#125;`);<br></code></pre></td></tr></table></figure><h2>Dockerfile Nodejs</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> node:<span class="hljs-number">16</span><br><br><span class="hljs-comment"># Path yang dijadikan direktori utama app ini</span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /usr/src/app</span><br><br><span class="hljs-comment"># Menyalin package.json dan package-lock.json</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> package*.json ./</span><br><br><span class="hljs-keyword">RUN</span><span class="language-bash"> npm install</span><br><span class="hljs-comment"># Melakukan instalasi library yang dibutuhkan</span><br><span class="hljs-comment"># gunakan line bawah ini untuk versi production</span><br><span class="hljs-comment"># RUN npm ci --only=production</span><br><br><span class="hljs-comment"># menyalin script app</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> . .</span><br><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">8080</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> &amp;<span class="hljs-comment">#91; &quot;node&quot;, &quot;server.js&quot; ]</span></span><br></code></pre></td></tr></table></figure><h2>Penyesuaian dengan Environment GCR/GCP</h2><p>Ada dua hal yang perlu diperhatikan dalam melakukan deployment dockerfile di GCR. Pertama, environment variables yang perlu kita cermati karena ada beberapa nama yang sudah digunakan oleh GCP. Kedua, masalah networking terutama port.</p><figure class="wp-block-image size-full"><img src="https://storage.googleapis.com/stateless-reyzeal-com/2022/04/d06a4427-image.png" alt="" class="wp-image-146"/></figure><p>Sebaiknya konstanta yang berkaitan dengan port menggunakan environment variable dari GCR dan memberi default value agar tidak bernilai salah ketika environment variablenya tidak diisi. Seperti ini misalnya:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">// server.js<br><br>const express = require(<span class="hljs-string">&#x27;express&#x27;</span>);<br><br>// Konstanta<br>const PORT = process.<span class="hljs-keyword">env</span>.PORT || <span class="hljs-number">8080</span>;<br>const HOST = <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>;<br><br>// Webservice<br>const app = express();<br>app.get(<span class="hljs-string">&#x27;/&#x27;</span>, (req, res) =&gt; &#123;<br>  res.send(<span class="hljs-string">&#x27;Hello World&#x27;</span>);<br>&#125;);<br><br>app.listen(PORT, HOST);<br>console.log(`Running on http://$&#123;HOST&#125;:$&#123;PORT&#125;`);<br></code></pre></td></tr></table></figure><p>Deploy ke GCR bisa dilakukan secara interactive dengan gcloud cli:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">gcloud <span class="hljs-keyword">run</span><span class="language-bash"> deploy</span><br></code></pre></td></tr></table></figure><p>Kita bisa menggunakan Google Cloud Build sehingga hasil imagenya dapat disimpan dan digunakan untuk deploy instance GCR.</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># untuk build</span><br>gcloud builds submit --tag asia.gcr.io/PROJECT-ID/IMAGE-NAME:VERSION<br><br><span class="hljs-comment"># untuk deploy ke GCR</span><br>gcloud <span class="hljs-keyword">run</span><span class="language-bash"> deploy --image asia.gcr.io/PROJECT-ID/IMAGE-NAME:VERSION --allow-unauthenticated --region asia-southeast1 NAMA_INSTANCE_GCR</span><br></code></pre></td></tr></table></figure><h3>Tips</h3><p>Pilih node image yang lebih kecil jika merasa hasil imagenya terlalu besar. Misalnya untuk image <code>node:16</code> menghasilkan 3048 MB.</p><figure class="wp-block-image size-full"><img src="https://storage.googleapis.com/stateless-reyzeal-com/2022/04/b4f65616-image.png" alt="" class="wp-image-147"/></figure><p>Sedangkan untuk <code>node:16-alpine</code> menghasilkan 1992 MB.</p><figure class="wp-block-image size-full"><img src="https://storage.googleapis.com/stateless-reyzeal-com/2022/04/a9acdc32-image.png" alt="" class="wp-image-148"/></figure><p>Demikian untuk konfigurasi dasar untuk dockerfile nodejs. Semoga lain kesempatan akan kita bisa membahas tentang multistage dockerfile untuk nodejs maupun typescript. Saya juga menulis tentang konfigurasi docker untuk bahasa lain seperti <a href="https://reyzeal.com/2022/04/26/Konfigurasi-Docker-PHP-untuk-Google-Cloud-Run/" target="_blank" rel="noreferrer noopener">php</a> dan tutorial untuk melakukan <a href="https://reyzeal.com/2022/04/instalasi-font-di-docker/" target="_blank" rel="noreferrer noopener">instalasi font di docker</a>.</p><h3>Daftar Links</h3><p>"Dockerizing a Node.js Web App" - <a href="https://nodejs.org/en/docs/guides/nodejs-docker-webapp/" target="_blank" rel="noreferrer noopener">https://nodejs.org/en/docs/guides/nodejs-docker-webapp/</a></p><p>"Quickstart: Deploy a Node.js service to Cloud Run" - <a href="https://cloud.google.com/run/docs/quickstarts/build-and-deploy/deploy-nodejs-service" target="_blank" rel="noreferrer noopener">https://cloud.google.com/run/docs/quickstarts/build-and-deploy/deploy-nodejs-service</a></p><p>"Container run contract" - <a href="https://cloud.google.com/run/docs/container-contract" target="_blank" rel="noreferrer noopener">https://cloud.google.com/run/docs/container-contract</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>cloud</tag>
      
      <tag>docker</tag>
      
      <tag>dockerfile</tag>
      
      <tag>webservice</tag>
      
      <tag>nodejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Konfigurasi Docker PHP untuk Google Cloud Run</title>
    <link href="/2022/04/26/Konfigurasi-Docker-PHP-untuk-Google-Cloud-Run/"/>
    <url>/2022/04/26/Konfigurasi-Docker-PHP-untuk-Google-Cloud-Run/</url>
    
    <content type="html"><![CDATA[<p>Bagaimana konfigurasi untuk menjalankan PHP di docker? Kali ini saya mencoba untuk membagikan tentang minimal konfigurasi untuk dockerfile PHP khususnya untuk dideploy di Google Cloud Run. Ada beberapa kasus yang mana kita hanya memerlukan basic feature dari PHP bahkan yang dideploy hanya berupa static page sederhana. Tetapi tak jarang pula kita memerlukan konfigurasi composer dan penambahan plugin extension dari PHP.</p><span id="more"></span><p>Sebelumnya, kita coba bagi dalam beberapa section. Pertama, konfigurasi dasar dan beberapa mod. Kedua, konfigurasi ext tambahan di PHP. Ketiga, memasang composer dan menginstall berbagai library melalui composer di docker.</p><h1 id="Konfigurasi-Dasar"><a href="#Konfigurasi-Dasar" class="headerlink" title="Konfigurasi Dasar"></a>Konfigurasi Dasar</h1><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> php:<span class="hljs-number">7.4</span>-apache<br><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /var/www/html</span><br><br><span class="hljs-comment"># mengubah port dari 80 ke PORT (8080 di GCR)</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> sed -i <span class="hljs-string">&#x27;s/80/$&#123;PORT&#125;/g&#x27;</span> /etc/apache2/sites-available/000-default.conf /etc/apache2/ports.conf</span><br><br><span class="hljs-comment"># atau gunakan aja custom file conf dan mereplace 000-default.conf</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> vhost.conf /etc/apache2/sites-available/000-default.conf</span><br><br><span class="hljs-comment"># pastikan php.ini sudah diset</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mv</span> <span class="hljs-string">&quot;<span class="hljs-variable">$PHP_INI_DIR</span>/php.ini-production&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$PHP_INI_DIR</span>/php.ini&quot;</span></span><br></code></pre></td></tr></table></figure><p>Untuk mengaktifkan mod seperti rewrite dan header bisa dilakukan dengan a2enmod.</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> php:<span class="hljs-number">7.4</span>-apache<br><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /var/www/html</span><br><br><span class="hljs-comment"># aktifkan mod</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> a2enmod rewrite</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> a2enmod header</span><br><br><span class="hljs-comment"># mengubah port dari 80 ke PORT (8080 di GCR)</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> sed -i <span class="hljs-string">&#x27;s/80/$&#123;PORT&#125;/g&#x27;</span> /etc/apache2/sites-available/000-default.conf /etc/apache2/ports.conf</span><br><br><span class="hljs-comment"># atau gunakan aja custom file conf dan mereplace 000-default.conf</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> vhost.conf /etc/apache2/sites-available/000-default.conf</span><br><br><span class="hljs-comment"># pastikan php.ini sudah diset</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mv</span> <span class="hljs-string">&quot;<span class="hljs-variable">$PHP_INI_DIR</span>/php.ini-production&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$PHP_INI_DIR</span>/php.ini&quot;</span></span><br></code></pre></td></tr></table></figure><h2>Konfigurasi Ext PHP</h2><p>Sebenarnya kunci utama untuk menambahkan extension di PHP hanya sebaris ini. Tinggal tambahkan saja ext yang ingin dipasang dalam baris itu. Contohnya menambahkan ext <code>opcache</code> dan <code>pdo_mysql</code>.</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> docker-php-ext-install -j <span class="hljs-string">&quot;<span class="hljs-subst">$(nproc)</span>&quot;</span> opcache pdo_mysql</span><br></code></pre></td></tr></table></figure><p>Tetapi untuk beberapa kasus ext lain memerlukan langkah tambahan. Beberapa diantaranya seperti <code>gd</code>, <code>intl</code>, <code>imap</code>, dan <code>imagick</code>.</p><h3 id="gd"><a href="#gd" class="headerlink" title="gd"></a>gd</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update \</span><br><span class="language-bash"> &amp;&amp; apt-get install -y \</span><br><span class="language-bash">  libfreetype6-dev \</span><br><span class="language-bash">  libpng-dev \</span><br><span class="language-bash">  libjpeg-dev \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-configure gd \</span><br><span class="language-bash">  --with-freetype-dir=/usr/include/ \</span><br><span class="language-bash">  --with-jpeg-dir=/usr/include/ \</span><br><span class="language-bash">  --with-png-dir=/usr/include/ \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-install -j$(<span class="hljs-built_in">nproc</span>) \</span><br><span class="language-bash">  gd \</span><br><span class="language-bash"> &amp;&amp; apt-get purge -y \</span><br><span class="language-bash">  libfreetype6-dev \</span><br><span class="language-bash">  libpng-dev \</span><br><span class="language-bash">  libjpeg-dev</span><br></code></pre></td></tr></table></figure><h3>intl</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update \</span><br><span class="language-bash"> &amp;&amp; apt-get install -y \</span><br><span class="language-bash">  libicu-dev \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-install -j$(<span class="hljs-built_in">nproc</span>) \</span><br><span class="language-bash">  intl \</span><br><span class="language-bash"> &amp;&amp; apt-get purge -y \</span><br><span class="language-bash">  libicu-dev</span><br></code></pre></td></tr></table></figure><h3 id="imap"><a href="#imap" class="headerlink" title="imap"></a>imap</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update \</span><br><span class="language-bash"> &amp;&amp; apt-get install -y libc-client-dev libkrb5-dev \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-configure imap \</span><br><span class="language-bash">  --with-kerberos \</span><br><span class="language-bash">  --with-imap-ssl \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-install -j$(<span class="hljs-built_in">nproc</span>) \</span><br><span class="language-bash">  imap \</span><br><span class="language-bash"> &amp;&amp; apt-get purge -y \</span><br><span class="language-bash">  libc-client-dev \</span><br><span class="language-bash">  libkrb5-dev</span><br><br></code></pre></td></tr></table></figure><h3 id="imagick-pecl"><a href="#imagick-pecl" class="headerlink" title="imagick(pecl)"></a>imagick(pecl)</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update \</span><br><span class="language-bash"> &amp;&amp; apt-get install -y \</span><br><span class="language-bash">  libmagickwand-dev --no-install-recommends \</span><br><span class="language-bash">  ghostscript --no-install-recommends \</span><br><span class="language-bash"> &amp;&amp; pecl install \</span><br><span class="language-bash">  imagick \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-enable \</span><br><span class="language-bash">  imagick \</span><br><span class="language-bash"> &amp;&amp; apt-get purge -y \</span><br><span class="language-bash">  libmagickwand-dev</span><br></code></pre></td></tr></table></figure><h3 id="Zip"><a href="#Zip" class="headerlink" title="Zip"></a>Zip</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update \</span><br><span class="language-bash"> &amp;&amp; apt-get install -y \</span><br><span class="language-bash">  libzip-dev \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-install -j$(<span class="hljs-built_in">nproc</span>) \</span><br><span class="language-bash">  zip \</span><br><span class="language-bash"> &amp;&amp; apt-get purge -y \</span><br><span class="language-bash">  libzip-dev</span><br></code></pre></td></tr></table></figure><h2 id="Konfigurasi-Composer"><a href="#Konfigurasi-Composer" class="headerlink" title="Konfigurasi Composer"></a>Konfigurasi Composer</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer &amp;&amp; <span class="hljs-built_in">chmod</span> +x /usr/bin/composer</span><br></code></pre></td></tr></table></figure><p>Setelah composer terinstall, kita bisa memasang library yang dibutuhkan dalam project. Tetapi perlu diperhatikan bahwa ketika melakukan composer install kita harus memberikan parameter tambahan supaya composer melakukan instalasi tanpa meninggalkan cache dan "sampah" lainnya supaya image docker yang dihasilkan tidak membengkak.</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">COPY</span><span class="language-bash"> composer.json ./</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> composer.lock ./</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> composer install --no-dev --no-interaction --optimize-autoloader</span><br></code></pre></td></tr></table></figure><p>Mungkin itu yang dapat saya bagikan. Masalah lain seperti <a href="/2022/04/25/Instalasi-Font-di-Docker/" target="_blank" rel="noreferrer noopener">memasang font di docker bisa dibaca disini</a>. Semoga bermanfaat.</p><h3 id="Daftar-Links"><a href="#Daftar-Links" class="headerlink" title="Daftar Links"></a>Daftar Links</h3><p>"Google Cloud Run Documentation for PHP" by <strong>GCP</strong><br><a href="https://cloud.google.com/run/docs/quickstarts/build-and-deploy/deploy-php-service" target="_blank" rel="noreferrer noopener">https://cloud.google.com/run/docs/quickstarts/build-and-deploy/deploy-php-service</a></p><p>"Gist about list of php ext in docker" by <strong>chronon</strong><br><a href="https://gist.github.com/chronon/95911d21928cff786e306c23e7d1d3f3" target="_blank" rel="noreferrer noopener">https://gist.github.com/chronon/95911d21928cff786e306c23e7d1d3f3</a> </p><p>"Faster Docker Builds with composer install" by <strong>Iacovos Constantinou</strong><br><a href="https://medium.com/@softius/faster-docker-builds-with-composer-install-b4d2b15d0fff" target="_blank" rel="noreferrer noopener">https://medium.com/@softius/faster-docker-builds-with-composer-install-b4d2b15d0fff</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>cloud</tag>
      
      <tag>docker</tag>
      
      <tag>dockerfile</tag>
      
      <tag>php</tag>
      
      <tag>webservice</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Instalasi Font di Docker</title>
    <link href="/2022/04/25/Instalasi-Font-di-Docker/"/>
    <url>/2022/04/25/Instalasi-Font-di-Docker/</url>
    
    <content type="html"><![CDATA[<p>Ada kalanya suatu service / docker membutuhkan font dalam operasinya. Contohnya untuk service yang menangani template dokumen atau generate dokumen. Saya menjumpai kasus yang mana harus membuat microservice untuk download PDF dari template DOCX yang sudah disiapkan sebelumnya. Alhasil, tidak hanya dokumen saja, font-font yang digunakan dalam dokumen tersebut juga perlu disiapkan dalam environment server. Lalu, bagaimana cara instalasinya?</p><p>Dalam kasus ini, saya menggunakan dockerfile untuk menyiapkan service di Google Cloud Run. Mungkin kalau ada yang menggunakan platform lain ada perbedaan teknis / flownya. Selama Operating System yang digunakan dalam docker tersebut berjenis linux, Saya kira tulisan ini masih relevan untuk dijadikan referensi.</p><p>Ok untuk instalasi font di docker, kita bagi menjadi beberapa section. Pertama, kita mencoba menggunakan manual installation. Kedua, kita mencoba menggunakan package manager. Ketiga, kita bisa juga menggunakan docker repository yang telah siap untuk digunakan.</p><h2 id="Manual-Installation"><a href="#Manual-Installation" class="headerlink" title="Manual Installation"></a>Manual Installation</h2><p>Pada dasarnya sama dengan instalasi font pada Linux. Yaitu meletakan file <strong>*.ttf</strong> dan sejenisnya di folder `<code>/usr/share/fonts/</code>`. Sudah itu aja sih. Berikut ini contohnya:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> alpine:latest<br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> /path/from/project/fonts.ttf /usr/share/fonts/</span><br></code></pre></td></tr></table></figure><p>Selama file *<a href=\"https://medium.com/source-words/how-to-manually-install-update-and-uninstall-fonts-on-linux-a8d09a3853b0\">.</a>ttf diletakkan dalam folder <code>/usr/share/fonts/ </code>maka service tersebut dapat menggunakan resource font tersebut. Terlepas diletakkan secara cuma-cuma ataupun disimpan dalam subfolder dan terpisah-pisah.</p><h2 id="Package-Manager"><a href="#Package-Manager" class="headerlink" title="Package Manager"></a>Package Manager</h2><p>Semisal Anda menggunakan package manager maka harus bisa memastikan fontnya tersedia. Menurut <a href=\"https://wiki.alpinelinux.org/wiki/Fonts\">dokumentasi</a> dari alpine tentang font kita bisa menginstall font dengan cara:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> alpine:latest<br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> apk add terminus-font ttf-inconsolata ttf-dejavu font-bitstream-* font-noto font-noto-* ttf-font-awesome font-noto-extra</span><br></code></pre></td></tr></table></figure><h2 id="Docker-Repository"><a href="#Docker-Repository" class="headerlink" title="Docker Repository"></a>Docker Repository</h2><p>Untuk docker repository ini ada dua pilihan. Menggunakan yang sudah ada, atau membuat repository sendiri. Tapi, ini yang saya contohkan yang tinggal pakai saja. Misalnya kita menggunakan dockernya milik <code>deemetreeats11/alpine-google-fonts</code> yang mana memuat beberapa google fonts (Roboto, Open Sans, Lato, dan Montserrat) semisal:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> deemetreeats11/alpine-google-fonts AS font_supply<br><br><span class="hljs-comment"># Kemudian kita pakai di stage berikutnya</span><br><span class="hljs-keyword">FROM</span> alpine:edge AS runtime<br><br><span class="hljs-comment"># ini kuncinya:</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> --from=font_supply /usr/share/fonts/ /usr/share/fonts/</span><br></code></pre></td></tr></table></figure><p>Okay, mungkin itu saja yang bisa saya dokumentasikan. Ini hanya sekelumit contoh tentang bagaimana memasangkan font di Linux Environment. Semoga bermanfaat.</p><h3 id="Daftar-Links"><a href="#Daftar-Links" class="headerlink" title="Daftar Links"></a>Daftar Links</h3><p>    <a href=\"https://hub.docker.com/r/deemetreeats11/alpine-google-fonts\" rel="nofollow">        https://hub.docker.com/r/deemetreeats11/alpine-google-fonts    </a><br>    <a href=\"https://wiki.alpinelinux.org/wiki/Fonts\" rel="nofollow">        https://wiki.alpinelinux.org/wiki/Fonts    </a><br>    <a href=\"https://medium.com/source-words/how-to-manually-install-update-and-uninstall-fonts-on-linux-a8d09a3853b0\" rel="nofollow">        https://medium.com/source-words/how-to-manually-install-update-and-uninstall-fonts-on-linux-a8d09a3853b0    </a></p>]]></content>
    
    
    
    <tags>
      
      <tag>cloud</tag>
      
      <tag>docker</tag>
      
      <tag>dockerfile</tag>
      
      <tag>google cloud run</tag>
      
      <tag>font</tag>
      
      <tag>service</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
