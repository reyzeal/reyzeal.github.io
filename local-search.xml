<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Kunci Katla</title>
    <link href="/2023/05/04/Kunci-Katla/"/>
    <url>/2023/05/04/Kunci-Katla/</url>
    
    <content type="html"><![CDATA[<p>Pernah main katla? Sebuah game tebak kata yang terdiri dari 5 huruf. Cobain deh, link gamenya ada di <a href="https://katla.vercel.app/">https://katla.vercel.app/</a>. Kalau Anda frustasi, silahkan gunakan fungsi berikut ini.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">translate</span>(<span class="hljs-params">text</span>)&#123;<br>  <span class="hljs-keyword">let</span> data = text.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&quot;</span>)<br>  <span class="hljs-keyword">let</span> r = data.<span class="hljs-title function_">pop</span>()<br>  data = data.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">v,i</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(v.<span class="hljs-title function_">charCodeAt</span>()+(i%<span class="hljs-number">2</span> === <span class="hljs-number">0</span>?-<span class="hljs-number">1</span>:<span class="hljs-number">1</span>))<br>  &#125;)<br>  data = data.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>  data += <span class="hljs-string">&quot;=&quot;</span>.<span class="hljs-title function_">repeat</span>(<span class="hljs-built_in">parseInt</span>(r))<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">atob</span>(data)<br>&#125;<br></code></pre></td></tr></table></figure><p>Hal yang perlu disiapkan adalah membuka inspect elemen di web katla, masuk ke tab console. Kemudian ketik <code>__NEXT_DATA__</code> apabila muncul objectnya, berarti kita tinggal mengakses property object tersebut untuk mendapatkan data <code>hashed</code>, lengkapnya di <code>__NEXT_DATA__.props.pageProps.hashed </code>. Terima kasih untuk framework nextjs sehingga props datanya bisa diakses dengan mudah.</p><p><img src="/../images/katla_01.png" alt="Mendapatkan hash dari data props Nextjs"></p><p>Hash yang muncul kemudian digunakan untuk parameter fungsi translate yang sudah dilampirkan diatas. Paste di console sehingga bisa digunakan. Perlu diperhatikan bahwa hash yang berhasil di translate memiliki 3 bagian, yaitu nomor katlanya, clue hari ini dan clue kemarin. Ketiga bagian dipisahkan dengan string <code>::</code>, makanya tinggal kita split saja.</p><p><img src="/../images/katla_02.png" alt="Hashed Katla memiliki 3 bagian"></p><div style="text-align: center; padding: 1em;">Coba paste hashnya disini : <br/><input id="katla" onkeyup="callback(event)"><div id="result"></div></div><script type="application/javascript">    const inputan = document.getElementById("katla");    const hasil = document.getElementById("result");    function callback(e) {        try {            let first = translate(e.target.value);            let second = first.split("::").map((v,i) => i===0?v:translate(v));            hasil.innerHTML="Hasil : "+`<span style="font-weight:bold;">${second[1]}</span>`;        }catch(e){            hasil.innerHTML=`<span style="color:#F96;font-weight:bold;">Hash katla tidak sesuai</span>`        }    }    function translate(text){      let data = text.split("");      let r = data.pop();      data = data.map((v,i) => {        return String.fromCharCode(v.charCodeAt()+(i%2 === 0?-1:1))      });      data = data.join("");      data += "=".repeat(parseInt(r));      return atob(data)    }</script><p>Semoga bermanfaat.</p>]]></content>
    
    
    
    <tags>
      
      <tag>katla</tag>
      
      <tag>kriptografi</tag>
      
      <tag>hack</tag>
      
      <tag>hash</tag>
      
      <tag>encryption</tag>
      
      <tag>base64</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pengaturan Puppeteer di VM GCP</title>
    <link href="/2023/05/03/Pengaturan-Puppeteer-di-VM-Compute-Engine-GCP/"/>
    <url>/2023/05/03/Pengaturan-Puppeteer-di-VM-Compute-Engine-GCP/</url>
    
    <content type="html"><![CDATA[<p>Ada banyak hal yang bisa dilakukan dengan menjalankan puppeteer, selenium atau browser automation. Testing bisa, scraping bisa, task automation, dan lain sebagainya. Skrip yang sudah dibuat pastinya berjalan normal dilokal PC. Masalah justru muncul ketika implementasi ke server yang mana masalah utamanya adalah beda environment.</p><p>Beberapa faktor saat implementasi di server:</p><ol><li>Server tidak memiliki display monitor, sehingga perlu membuat virtual display</li><li>Driver&#x2F;Library yang dibutuhkan untuk keperluan display sistem</li><li>Spesifikasi server yang kurang mumpuni, biasanya sih RAMnya</li></ol><h2 id="Konfigurasi-Display-di-Compute-Engine-GCP"><a href="#Konfigurasi-Display-di-Compute-Engine-GCP" class="headerlink" title="Konfigurasi Display di Compute Engine GCP"></a>Konfigurasi Display di Compute Engine GCP</h2><p><img src="/images/pengaturan_gcp_1.png" alt="Display Device harus dicentang"><br>Pastikan Display Device sudah tercentang. Apabila belum, perlu menghentikan VM kemudian edit dan nyalakan ulang.</p><h2 id="Ubuntu-Server-Driver-yang-dibutuhkan"><a href="#Ubuntu-Server-Driver-yang-dibutuhkan" class="headerlink" title="(Ubuntu Server) Driver yang dibutuhkan"></a>(Ubuntu Server) Driver yang dibutuhkan</h2><p>Ada beberapa library yang perlu diinstal untuk ubuntu server.</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> apt-get install -y gconf-service libasound2 libatk1.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libc6 libcairo2 libcups2 libdbus-<span class="hljs-number">1</span>-<span class="hljs-number">3</span> libexpat1 libfontconfig1 libgcc1 libgconf-<span class="hljs-number">2</span>-<span class="hljs-number">4</span> libgdk-pixbuf2.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libglib2.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libgtk-<span class="hljs-number">3</span>-<span class="hljs-number">0</span> libnspr4 libpango-<span class="hljs-number">1</span>.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libpangocairo-<span class="hljs-number">1</span>.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libstdc++<span class="hljs-number">6</span> libx11-<span class="hljs-number">6</span> libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget libgbm-dev<br></code></pre></td></tr></table></figure><h2 id="Spesifikasi-Server"><a href="#Spesifikasi-Server" class="headerlink" title="Spesifikasi Server"></a>Spesifikasi Server</h2><p>Biasanya untuk running 1 skrip membutuhkan minimal 300 MB, hal ini dikarenakan puppeteer perlu menjalankan browser meskipun berjalan secara headless. Asalkan 1 VM diperuntukkan khusus untuk 1 skrip automation, jenis machine <code>e2-micro</code> cukup kuat.</p>]]></content>
    
    
    
    <tags>
      
      <tag>puppeteer</tag>
      
      <tag>automation</tag>
      
      <tag>virtual machine</tag>
      
      <tag>cloud</tag>
      
      <tag>google cloud platform</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
