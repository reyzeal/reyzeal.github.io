<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Kunci Katla</title>
    <link href="/2023/05/04/Kunci-Katla/"/>
    <url>/2023/05/04/Kunci-Katla/</url>
    
    <content type="html"><![CDATA[<p>Pernah main katla? Sebuah game tebak kata yang terdiri dari 5 huruf. Cobain deh, link gamenya ada di <a href="https://katla.vercel.app/">https://katla.vercel.app/</a>. Kalau Anda frustasi, silahkan gunakan fungsi berikut ini untuk mendapatkan kata kuncinya.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">translate</span>(<span class="hljs-params">text</span>)&#123;<br>  <span class="hljs-keyword">let</span> data = text.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&quot;</span>)<br>  <span class="hljs-keyword">let</span> r = data.<span class="hljs-title function_">pop</span>()<br>  data = data.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">v,i</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(v.<span class="hljs-title function_">charCodeAt</span>()+(i%<span class="hljs-number">2</span> === <span class="hljs-number">0</span>?-<span class="hljs-number">1</span>:<span class="hljs-number">1</span>))<br>  &#125;)<br>  data = data.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>  data += <span class="hljs-string">&quot;=&quot;</span>.<span class="hljs-title function_">repeat</span>(<span class="hljs-built_in">parseInt</span>(r))<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">atob</span>(data)<br>&#125;<br></code></pre></td></tr></table></figure><p>Hal yang perlu disiapkan adalah membuka inspect elemen di web katla, masuk ke tab console. Kemudian ketik <code>__NEXT_DATA__</code> apabila muncul objectnya, berarti kita tinggal mengakses property object tersebut untuk mendapatkan data <code>hashed</code>, lengkapnya di <code>__NEXT_DATA__.props.pageProps.hashed </code>. Terima kasih untuk framework nextjs sehingga props datanya bisa diakses dengan mudah.</p><p><img src="/../images/katla_01.png" alt="Mendapatkan hash dari data props Nextjs"></p><p>Hash yang muncul kemudian digunakan untuk parameter fungsi translate yang sudah dilampirkan diatas. Paste di console sehingga bisa digunakan. Perlu diperhatikan bahwa hash yang berhasil di translate memiliki 3 bagian, yaitu nomor katlanya, clue hari ini dan clue kemarin. Ketiga bagian dipisahkan dengan string <code>::</code>, makanya tinggal kita split saja.</p><p><img src="/../images/katla_02.png" alt="Hashed Katla memiliki 3 bagian"></p><video width='100%' height='250px' controls><source src='/videos/2023-05-04%2009-03-36.mp4 ' type=video/webm> Your browser does not support the webm tag.</video><div style="text-align: center; padding: 1em;">Coba paste hashnya disini : <br/><input id="katla" onkeyup="callback(event)"><div id="result"></div></div><script type="application/javascript">    const inputan = document.getElementById("katla");    const hasil = document.getElementById("result");    function callback(e) {        try {            let first = translate(e.target.value);            let second = first.split("::").map((v,i) => i===0?v:translate(v));            hasil.innerHTML="Hasil : "+`<span style="font-weight:bold;">${second[1]}</span>`;        }catch(e){            hasil.innerHTML=`<span style="color:#F96;font-weight:bold;">Hash katla tidak sesuai</span>`        }    }    function translate(text){      let data = text.split("");      let r = data.pop();      data = data.map((v,i) => {        return String.fromCharCode(v.charCodeAt()+(i%2 === 0?-1:1))      });      data = data.join("");      data += "=".repeat(parseInt(r));      return atob(data)    }</script><p>Semoga bermanfaat.</p>]]></content>
    
    
    
    <tags>
      
      <tag>katla</tag>
      
      <tag>kriptografi</tag>
      
      <tag>hack</tag>
      
      <tag>hash</tag>
      
      <tag>encryption</tag>
      
      <tag>base64</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pengaturan Puppeteer di VM GCP</title>
    <link href="/2023/05/03/Pengaturan-Puppeteer-di-VM-Compute-Engine-GCP/"/>
    <url>/2023/05/03/Pengaturan-Puppeteer-di-VM-Compute-Engine-GCP/</url>
    
    <content type="html"><![CDATA[<p>Ada banyak hal yang bisa dilakukan dengan menjalankan puppeteer, selenium atau browser automation. Testing bisa, scraping bisa, task automation, dan lain sebagainya. Skrip yang sudah dibuat pastinya berjalan normal dilokal PC. Masalah justru muncul ketika implementasi ke server yang mana masalah utamanya adalah beda environment.</p><p>Beberapa faktor saat implementasi di server:</p><ol><li>Server tidak memiliki display monitor, sehingga perlu membuat virtual display</li><li>Driver&#x2F;Library yang dibutuhkan untuk keperluan display sistem</li><li>Spesifikasi server yang kurang mumpuni, biasanya sih RAMnya</li></ol><h2 id="Konfigurasi-Display-di-Compute-Engine-GCP"><a href="#Konfigurasi-Display-di-Compute-Engine-GCP" class="headerlink" title="Konfigurasi Display di Compute Engine GCP"></a>Konfigurasi Display di Compute Engine GCP</h2><p><img src="/images/pengaturan_gcp_1.png" alt="Display Device harus dicentang"><br>Pastikan Display Device sudah tercentang. Apabila belum, perlu menghentikan VM kemudian edit dan nyalakan ulang.</p><h2 id="Ubuntu-Server-Driver-yang-dibutuhkan"><a href="#Ubuntu-Server-Driver-yang-dibutuhkan" class="headerlink" title="(Ubuntu Server) Driver yang dibutuhkan"></a>(Ubuntu Server) Driver yang dibutuhkan</h2><p>Ada beberapa library yang perlu diinstal untuk ubuntu server.</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> apt-get install -y gconf-service libasound2 libatk1.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libc6 libcairo2 libcups2 libdbus-<span class="hljs-number">1</span>-<span class="hljs-number">3</span> libexpat1 libfontconfig1 libgcc1 libgconf-<span class="hljs-number">2</span>-<span class="hljs-number">4</span> libgdk-pixbuf2.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libglib2.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libgtk-<span class="hljs-number">3</span>-<span class="hljs-number">0</span> libnspr4 libpango-<span class="hljs-number">1</span>.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libpangocairo-<span class="hljs-number">1</span>.<span class="hljs-number">0</span>-<span class="hljs-number">0</span> libstdc++<span class="hljs-number">6</span> libx11-<span class="hljs-number">6</span> libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget libgbm-dev<br></code></pre></td></tr></table></figure><h2 id="Spesifikasi-Server"><a href="#Spesifikasi-Server" class="headerlink" title="Spesifikasi Server"></a>Spesifikasi Server</h2><p>Biasanya untuk running 1 skrip membutuhkan minimal 300 MB, hal ini dikarenakan puppeteer perlu menjalankan browser meskipun berjalan secara headless. Asalkan 1 VM diperuntukkan khusus untuk 1 skrip automation, jenis machine <code>e2-micro</code> cukup kuat.</p>]]></content>
    
    
    
    <tags>
      
      <tag>puppeteer</tag>
      
      <tag>automation</tag>
      
      <tag>virtual machine</tag>
      
      <tag>cloud</tag>
      
      <tag>google cloud platform</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Konfigurasi Docker PHP untuk Google Cloud Run</title>
    <link href="/2022/04/26/Konfigurasi-Docker-PHP-untuk-Google-Cloud-Run/"/>
    <url>/2022/04/26/Konfigurasi-Docker-PHP-untuk-Google-Cloud-Run/</url>
    
    <content type="html"><![CDATA[<p>Bagaimana konfigurasi untuk menjalankan PHP di docker? Kali ini saya mencoba untuk membagikan tentang minimal konfigurasi untuk dockerfile PHP khususnya untuk dideploy di Google Cloud Run. Ada beberapa kasus yang mana kita hanya memerlukan basic feature dari PHP bahkan yang dideploy hanya berupa static page sederhana. Tetapi tak jarang pula kita memerlukan konfigurasi composer dan penambahan plugin extension dari PHP.</p><span id="more"></span><p>Sebelumnya, kita coba bagi dalam beberapa section. Pertama, konfigurasi dasar dan beberapa mod. Kedua, konfigurasi ext tambahan di PHP. Ketiga, memasang composer dan menginstall berbagai library melalui composer di docker.</p><h1 id="Konfigurasi-Dasar"><a href="#Konfigurasi-Dasar" class="headerlink" title="Konfigurasi Dasar"></a>Konfigurasi Dasar</h1><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> php:<span class="hljs-number">7.4</span>-apache<br><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /var/www/html</span><br><br><span class="hljs-comment"># mengubah port dari 80 ke PORT (8080 di GCR)</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> sed -i <span class="hljs-string">&#x27;s/80/$&#123;PORT&#125;/g&#x27;</span> /etc/apache2/sites-available/000-default.conf /etc/apache2/ports.conf</span><br><br><span class="hljs-comment"># atau gunakan aja custom file conf dan mereplace 000-default.conf</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> vhost.conf /etc/apache2/sites-available/000-default.conf</span><br><br><span class="hljs-comment"># pastikan php.ini sudah diset</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mv</span> \&quot;<span class="hljs-variable">$PHP_INI_DIR</span>/php.ini-production\&quot; \&quot;<span class="hljs-variable">$PHP_INI_DIR</span>/php.ini\&quot;</span><br></code></pre></td></tr></table></figure><p>Untuk mengaktifkan mod seperti rewrite dan header bisa dilakukan dengan a2enmod.</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> php:<span class="hljs-number">7.4</span>-apache<br><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /var/www/html</span><br><br><span class="hljs-comment"># aktifkan mod</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> a2enmod rewrite</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> a2enmod header</span><br><br><span class="hljs-comment"># mengubah port dari 80 ke PORT (8080 di GCR)</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> sed -i <span class="hljs-string">&#x27;s/80/$&#123;PORT&#125;/g&#x27;</span> /etc/apache2/sites-available/000-default.conf /etc/apache2/ports.conf</span><br><br><span class="hljs-comment"># atau gunakan aja custom file conf dan mereplace 000-default.conf</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> vhost.conf /etc/apache2/sites-available/000-default.conf</span><br><br><span class="hljs-comment"># pastikan php.ini sudah diset</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mv</span> \&quot;<span class="hljs-variable">$PHP_INI_DIR</span>/php.ini-production\&quot; \&quot;<span class="hljs-variable">$PHP_INI_DIR</span>/php.ini\&quot;</span><br></code></pre></td></tr></table></figure><h2>Konfigurasi Ext PHP</h2><p>Sebenarnya kunci utama untuk menambahkan extension di PHP hanya sebaris ini. Tinggal tambahkan saja ext yang ingin dipasang dalam baris itu. Contohnya menambahkan ext <code>opcache</code> dan <code>pdo_mysql</code>.</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> docker-php-ext-install -j \&quot;$(<span class="hljs-built_in">nproc</span>)\&quot; opcache pdo_mysql</span><br></code></pre></td></tr></table></figure><p>Tetapi untuk beberapa kasus ext lain memerlukan langkah tambahan. Beberapa diantaranya seperti <code>gd</code>, <code>intl</code>, <code>imap</code>, dan <code>imagick</code>.</p><h3 id="gd"><a href="#gd" class="headerlink" title="gd"></a>gd</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update \</span><br><span class="language-bash"> &amp;&amp; apt-get install -y \</span><br><span class="language-bash">  libfreetype6-dev \</span><br><span class="language-bash">  libpng-dev \</span><br><span class="language-bash">  libjpeg-dev \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-configure gd \</span><br><span class="language-bash">  --with-freetype-dir=/usr/include/ \</span><br><span class="language-bash">  --with-jpeg-dir=/usr/include/ \</span><br><span class="language-bash">  --with-png-dir=/usr/include/ \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-install -j$(<span class="hljs-built_in">nproc</span>) \</span><br><span class="language-bash">  gd \</span><br><span class="language-bash"> &amp;&amp; apt-get purge -y \</span><br><span class="language-bash">  libfreetype6-dev \</span><br><span class="language-bash">  libpng-dev \</span><br><span class="language-bash">  libjpeg-dev</span><br></code></pre></td></tr></table></figure><h3>intl</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update \</span><br><span class="language-bash"> &amp;&amp; apt-get install -y \</span><br><span class="language-bash">  libicu-dev \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-install -j$(<span class="hljs-built_in">nproc</span>) \</span><br><span class="language-bash">  intl \</span><br><span class="language-bash"> &amp;&amp; apt-get purge -y \</span><br><span class="language-bash">  libicu-dev</span><br></code></pre></td></tr></table></figure><h3 id="imap"><a href="#imap" class="headerlink" title="imap"></a>imap</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update \</span><br><span class="language-bash"> &amp;&amp; apt-get install -y libc-client-dev libkrb5-dev \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-configure imap \</span><br><span class="language-bash">  --with-kerberos \</span><br><span class="language-bash">  --with-imap-ssl \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-install -j$(<span class="hljs-built_in">nproc</span>) \</span><br><span class="language-bash">  imap \</span><br><span class="language-bash"> &amp;&amp; apt-get purge -y \</span><br><span class="language-bash">  libc-client-dev \</span><br><span class="language-bash">  libkrb5-dev</span><br><br></code></pre></td></tr></table></figure><h3 id="imagick-pecl"><a href="#imagick-pecl" class="headerlink" title="imagick(pecl)"></a>imagick(pecl)</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update \</span><br><span class="language-bash"> &amp;&amp; apt-get install -y \</span><br><span class="language-bash">  libmagickwand-dev --no-install-recommends \</span><br><span class="language-bash">  ghostscript --no-install-recommends \</span><br><span class="language-bash"> &amp;&amp; pecl install \</span><br><span class="language-bash">  imagick \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-enable \</span><br><span class="language-bash">  imagick \</span><br><span class="language-bash"> &amp;&amp; apt-get purge -y \</span><br><span class="language-bash">  libmagickwand-dev</span><br></code></pre></td></tr></table></figure><h3 id="Zip"><a href="#Zip" class="headerlink" title="Zip"></a>Zip</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update \</span><br><span class="language-bash"> &amp;&amp; apt-get install -y \</span><br><span class="language-bash">  libzip-dev \</span><br><span class="language-bash"> &amp;&amp; docker-php-ext-install -j$(<span class="hljs-built_in">nproc</span>) \</span><br><span class="language-bash">  zip \</span><br><span class="language-bash"> &amp;&amp; apt-get purge -y \</span><br><span class="language-bash">  libzip-dev</span><br></code></pre></td></tr></table></figure><h2 id="Konfigurasi-Composer"><a href="#Konfigurasi-Composer" class="headerlink" title="Konfigurasi Composer"></a>Konfigurasi Composer</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">RUN</span><span class="language-bash"> curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer &amp;&amp; <span class="hljs-built_in">chmod</span> +x /usr/bin/composer</span><br></code></pre></td></tr></table></figure><p>Setelah composer terinstall, kita bisa memasang library yang dibutuhkan dalam project. Tetapi perlu diperhatikan bahwa ketika melakukan composer install kita harus memberikan parameter tambahan supaya composer melakukan instalasi tanpa meninggalkan cache dan \"sampah\" lainnya supaya image docker yang dihasilkan tidak membengkak.</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">COPY</span><span class="language-bash"> composer.json ./</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> composer.lock ./</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> composer install --no-dev --no-interaction --optimize-autoloader</span><br></code></pre></td></tr></table></figure><p>Mungkin itu yang dapat saya bagikan. Masalah lain seperti <a href=\"https://reyzeal.com/2022/04/instalasi-font-di-docker/\" target=\"_blank\" rel="noreferrer noopener">memasang font di docker bisa dibaca disini</a>. Semoga bermanfaat.</p><h3 id="Daftar-Links"><a href="#Daftar-Links" class="headerlink" title="Daftar Links"></a>Daftar Links</h3><p>"Google Cloud Run Documentation for PHP" by <strong>GCP</strong><br><a href=\"https://cloud.google.com/run/docs/quickstarts/build-and-deploy/deploy-php-service\" target=\"_blank\" rel="noreferrer noopener">https://cloud.google.com/run/docs/quickstarts/build-and-deploy/deploy-php-service</a></p><p>"Gist about list of php ext in docker" by <strong>chronon</strong><br><a href=\"https://gist.github.com/chronon/95911d21928cff786e306c23e7d1d3f3\" target=\"_blank\" rel="noreferrer noopener">https://gist.github.com/chronon/95911d21928cff786e306c23e7d1d3f3</a> </p><p>"Faster Docker Builds with composer install" by <strong>Iacovos Constantinou</strong><br><a href=\"https://medium.com/@softius/faster-docker-builds-with-composer-install-b4d2b15d0fff\" target=\"_blank\" rel="noreferrer noopener">https://medium.com/@softius/faster-docker-builds-with-composer-install-b4d2b15d0fff</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>dockerfile</tag>
      
      <tag>php</tag>
      
      <tag>webservice</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Instalasi Font di Docker</title>
    <link href="/2022/04/25/Instalasi-Font-di-Docker/"/>
    <url>/2022/04/25/Instalasi-Font-di-Docker/</url>
    
    <content type="html"><![CDATA[<p>Ada kalanya suatu service / docker membutuhkan font dalam operasinya. Contohnya untuk service yang menangani template dokumen atau generate dokumen. Saya menjumpai kasus yang mana harus membuat microservice untuk download PDF dari template DOCX yang sudah disiapkan sebelumnya. Alhasil, tidak hanya dokumen saja, font-font yang digunakan dalam dokumen tersebut juga perlu disiapkan dalam environment server. Lalu, bagaimana cara instalasinya?</p><p>Dalam kasus ini, saya menggunakan dockerfile untuk menyiapkan service di Google Cloud Run. Mungkin kalau ada yang menggunakan platform lain ada perbedaan teknis / flownya. Selama Operating System yang digunakan dalam docker tersebut berjenis linux, Saya kira tulisan ini masih relevan untuk dijadikan referensi.</p><p>Ok untuk instalasi font di docker, kita bagi menjadi beberapa section. Pertama, kita mencoba menggunakan manual installation. Kedua, kita mencoba menggunakan package manager. Ketiga, kita bisa juga menggunakan docker repository yang telah siap untuk digunakan.</p><h2 id="Manual-Installation"><a href="#Manual-Installation" class="headerlink" title="Manual Installation"></a>Manual Installation</h2><p>Pada dasarnya sama dengan instalasi font pada Linux. Yaitu meletakan file <strong>*.ttf</strong> dan sejenisnya di folder `<code>/usr/share/fonts/</code>`. Sudah itu aja sih. Berikut ini contohnya:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> alpine:latest<br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> /path/from/project/fonts.ttf /usr/share/fonts/</span><br></code></pre></td></tr></table></figure><p>Selama file *<a href=\"https://medium.com/source-words/how-to-manually-install-update-and-uninstall-fonts-on-linux-a8d09a3853b0\">.</a>ttf diletakkan dalam folder <code>/usr/share/fonts/ </code>maka service tersebut dapat menggunakan resource font tersebut. Terlepas diletakkan secara cuma-cuma ataupun disimpan dalam subfolder dan terpisah-pisah.</p><h2 id="Package-Manager"><a href="#Package-Manager" class="headerlink" title="Package Manager"></a>Package Manager</h2><p>Semisal Anda menggunakan package manager maka harus bisa memastikan fontnya tersedia. Menurut <a href=\"https://wiki.alpinelinux.org/wiki/Fonts\">dokumentasi</a> dari alpine tentang font kita bisa menginstall font dengan cara:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> alpine:latest<br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> apk add terminus-font ttf-inconsolata ttf-dejavu font-bitstream-* font-noto font-noto-* ttf-font-awesome font-noto-extra</span><br></code></pre></td></tr></table></figure><h2 id="Docker-Repository"><a href="#Docker-Repository" class="headerlink" title="Docker Repository"></a>Docker Repository</h2><p>Untuk docker repository ini ada dua pilihan. Menggunakan yang sudah ada, atau membuat repository sendiri. Tapi, ini yang saya contohkan yang tinggal pakai saja. Misalnya kita menggunakan dockernya milik <code>deemetreeats11/alpine-google-fonts</code> yang mana memuat beberapa google fonts (Roboto, Open Sans, Lato, dan Montserrat) semisal:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> deemetreeats11/alpine-google-fonts AS font_supply<br><br><span class="hljs-comment"># Kemudian kita pakai di stage berikutnya</span><br><span class="hljs-keyword">FROM</span> alpine:edge AS runtime<br><br><span class="hljs-comment"># ini kuncinya:</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> --from=font_supply /usr/share/fonts/ /usr/share/fonts/</span><br></code></pre></td></tr></table></figure><p>Okay, mungkin itu saja yang bisa saya dokumentasikan. Ini hanya sekelumit contoh tentang bagaimana memasangkan font di Linux Environment. Semoga bermanfaat.</p><h3 id="Daftar-Links"><a href="#Daftar-Links" class="headerlink" title="Daftar Links"></a>Daftar Links</h3><p>    <a href=\"https://hub.docker.com/r/deemetreeats11/alpine-google-fonts\" rel="nofollow">        https://hub.docker.com/r/deemetreeats11/alpine-google-fonts    </a><br>    <a href=\"https://wiki.alpinelinux.org/wiki/Fonts\" rel="nofollow">        https://wiki.alpinelinux.org/wiki/Fonts    </a><br>    <a href=\"https://medium.com/source-words/how-to-manually-install-update-and-uninstall-fonts-on-linux-a8d09a3853b0\" rel="nofollow">        https://medium.com/source-words/how-to-manually-install-update-and-uninstall-fonts-on-linux-a8d09a3853b0    </a></p>]]></content>
    
    
    
    <tags>
      
      <tag>cloud</tag>
      
      <tag>docker</tag>
      
      <tag>dockerfile</tag>
      
      <tag>google cloud run</tag>
      
      <tag>font</tag>
      
      <tag>service</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
